@model Bourse.Models.Indice

@{
    ViewData["Title"] = "Details";
}

<div>
    <h1>@Html.DisplayFor(model => model.Symbol): @Html.DisplayFor(model => model.Name)</h1>
    <hr />
    <div>
        <a asp-action="Index">Back to List</a>
    </div>
    <h2>Hystory Prices </h2>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Regular Market Price
                </th>
                <th>
                    Regular Market Change
                </th>
                <th>
                    Regular Market Open
                </th>
                <th>
                    Regular Market Change Percent
                </th>
                <th>
                    Regular Market Previous Close
                </th>
                <th>
                    Regular Market Day High
                </th>
                <th>
                    Regular Market Day Low
                </th>
                <th>
                    Regular Market Volume
                </th>
                <th>
                    Quote Type
                </th>
                <th>
                    Bourse
                </th>
                <th>
                    Exchange
                </th>
                <th>
                    RSI_14
                </th>
                <th>
                    SMA_14
                </th>
                <th>
                    Date
                </th>
                <th>
                    Label
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.TrainingData.TakeLast(20).OrderByDescending(t=> t.Date)) // Prendre seulement les 20 premiers éléments
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.CurrentPrice)
                    </td>
                    <td style='color:@(item.Change <= 0 ? "lightcoral" :"lightgreen")'>
                        @Html.DisplayFor(modelItem => item.Change)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Open)
                    </td>
                    <td style='color:@(item.ChangePercent <= 0 ? "lightcoral" : "lightgreen")'>
                        (@Html.DisplayFor(modelItem => item.ChangePercent) %)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PrevPrice)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.High)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Low)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem.RegularMarketVolume)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem.QuoteType)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem.Bourse)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem.Exchange)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RSI_14Display)
                        @* @Html.DisplayFor(modelItem => item.RSI_14 != null ? Math.Round(item.RSI_14) + " %" : "0 %") *@
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SMA_14Display)
                        @* @Html.DisplayFor(modelItem => item.SMA_14 != null ? Math.Round(item.SMA_14) + " %" : "0 %") *@
                    </td>
                    <td>
                        @item.Date.ToString("yyyy-MM-dd")
                    </td>
                    <td style='color:@(Model.Label ? "lightgreen" : "lightcoral")'>
                        @(Model.Label ? "UP" : "DOWN")
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

