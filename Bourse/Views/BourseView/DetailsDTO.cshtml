@model Bourse.Models.DTO.IndiceDTO

@{
    ViewData["Title"] = "Details";
}

<div>
    <h1>@Html.DisplayFor(model => model.Symbol): @Html.DisplayFor(model => model.Name)</h1>
    <hr />
    <div>
        @if (ViewData["ReturnUrl"]?.ToString() == "ForecastsDTO")
        {
            <a asp-action="ForecastsDTO">Back to Forecasts</a>
        }
        else
        {
            <a asp-action="IndexDTO">Back to Index</a>
        }
    </div>
    <h2>Hystory Prices </h2>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.RegularMarketPrice)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RegularMarketChange)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RegularMarketOpen)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RegularMarketChangePercent)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RegularMarketPreviousClose)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RegularMarketDayHigh)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RegularMarketDayLow)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RegularMarketVolume)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.QuoteType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Bourse)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Exchange)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Raccomandation)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateUpdated)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Label)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.TrainingData!.TakeLast(20).OrderByDescending(t=> t.Date)) // Prendre seulement les 20 premiers éléments
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.CurrentPrice)
                    </td>
                    <td style='color:@(item.Change <= 0 ? "lightcoral" :"lightgreen")'>
                        @Html.DisplayFor(modelItem => item.Change)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Open)
                    </td>
                    <td style='color:@(item.ChangePercent <= 0 ? "lightcoral" : "lightgreen")'>
                        (@Html.DisplayFor(modelItem => item.ChangePercent) %)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PrevPrice)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.High)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Low)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Volume)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem.QuoteType)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem.Bourse)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem.Exchange)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Raccomandation)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td style='color:@(Model.Label ? "lightgreen" : "lightcoral")'>
                        @(Model.Label ? "UP" : "DOWN")
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

